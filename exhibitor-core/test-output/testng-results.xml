<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="6" total="53" passed="47">
  <reporter-output>
  </reporter-output>
  <suite name="Default Suite" duration-ms="44284" started-at="2017-02-05T16:00:34Z" finished-at="2017-02-05T16:01:19Z">
    <groups>
    </groups>
    <test name="exhibitor-core" duration-ms="44284" started-at="2017-02-05T16:00:34Z" finished-at="2017-02-05T16:01:19Z">
      <class name="com.netflix.exhibitor.core.analyze.TestPathAnalyzer">
        <test-method status="PASS" signature="testBasic()" name="testBasic" duration-ms="283" started-at="2017-02-05T16:00:49Z" finished-at="2017-02-05T16:00:50Z">
        </test-method>
      </class>
      <class name="com.netflix.exhibitor.core.config.TestZooCfgOrdering">
        <test-method status="PASS" signature="testZooCfgOrdering()" name="testZooCfgOrdering" duration-ms="132" started-at="2017-02-05T16:00:59Z" finished-at="2017-02-05T16:01:00Z">
        </test-method>
      </class>
      <class name="com.netflix.exhibitor.core.activity.TestActivityQueue">
        <test-method status="PASS" signature="test()" name="test" duration-ms="10018" started-at="2017-02-05T16:00:34Z" finished-at="2017-02-05T16:00:44Z">
        </test-method>
        <test-method status="PASS" signature="testBasic()" name="testBasic" duration-ms="37" started-at="2017-02-05T16:00:44Z" finished-at="2017-02-05T16:00:45Z">
        </test-method>
        <test-method status="PASS" signature="testDelay()" name="testDelay" duration-ms="2004" started-at="2017-02-05T16:00:45Z" finished-at="2017-02-05T16:00:47Z">
        </test-method>
        <test-method status="PASS" signature="testRepeating()" name="testRepeating" duration-ms="1612" started-at="2017-02-05T16:00:47Z" finished-at="2017-02-05T16:00:48Z">
        </test-method>
        <test-method status="PASS" signature="testReplace()" name="testReplace" duration-ms="6" started-at="2017-02-05T16:00:48Z" finished-at="2017-02-05T16:00:48Z">
        </test-method>
        <test-method status="PASS" signature="testSequential()" name="testSequential" duration-ms="1159" started-at="2017-02-05T16:00:48Z" finished-at="2017-02-05T16:00:49Z">
        </test-method>
      </class>
      <class name="com.netflix.exhibitor.core.config.zookeeper.TestZookeeperConfigProvider">
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="872" started-at="2017-02-05T16:01:00Z" finished-at="2017-02-05T16:01:01Z">
        </test-method>
        <test-method status="PASS" signature="testBasic()" name="testBasic" duration-ms="3941" started-at="2017-02-05T16:01:01Z" finished-at="2017-02-05T16:01:05Z">
        </test-method>
        <test-method status="PASS" signature="tearDown()" name="tearDown" is-config="true" duration-ms="315" started-at="2017-02-05T16:01:05Z" finished-at="2017-02-05T16:01:05Z">
        </test-method>
        <test-method status="PASS" signature="setup()" name="setup" is-config="true" duration-ms="318" started-at="2017-02-05T16:01:05Z" finished-at="2017-02-05T16:01:05Z">
        </test-method>
        <test-method status="PASS" signature="testConcurrentModification()" name="testConcurrentModification" duration-ms="2751" started-at="2017-02-05T16:01:05Z" finished-at="2017-02-05T16:01:08Z">
        </test-method>
        <test-method status="PASS" signature="tearDown()" name="tearDown" is-config="true" duration-ms="308" started-at="2017-02-05T16:01:08Z" finished-at="2017-02-05T16:01:08Z">
        </test-method>
      </class>
      <class name="com.netflix.exhibitor.core.config.TestRollingChangeStaging">
        <test-method status="PASS" signature="testBasic()" name="testBasic" duration-ms="1135" started-at="2017-02-05T16:00:57Z" finished-at="2017-02-05T16:00:58Z">
        </test-method>
        <test-method status="PASS" signature="testMultiple()" name="testMultiple" duration-ms="1047" started-at="2017-02-05T16:00:58Z" finished-at="2017-02-05T16:00:59Z">
        </test-method>
      </class>
      <class name="com.netflix.exhibitor.core.s3.TestRefCountedClient">
        <test-method status="PASS" signature="testBasic()" name="testBasic" duration-ms="7203" started-at="2017-02-05T16:01:08Z" finished-at="2017-02-05T16:01:15Z">
        </test-method>
      </class>
      <class name="com.netflix.exhibitor.core.state.TestServerList">
        <test-method status="PASS" signature="testEdges()" name="testEdges" duration-ms="2" started-at="2017-02-05T16:01:19Z" finished-at="2017-02-05T16:01:19Z">
        </test-method>
        <test-method status="PASS" signature="testSimple()" name="testSimple" duration-ms="1" started-at="2017-02-05T16:01:19Z" finished-at="2017-02-05T16:01:19Z">
        </test-method>
      </class>
      <class name="com.netflix.exhibitor.core.TestServerSpec">
        <test-method status="PASS" signature="testSpecString()" name="testSpecString" duration-ms="45" started-at="2017-02-05T16:00:34Z" finished-at="2017-02-05T16:00:34Z">
        </test-method>
      </class>
      <class name="com.netflix.exhibitor.core.config.TestRestartSignificantConfig">
        <test-method status="PASS" signature="testBasic()" name="testBasic" duration-ms="13" started-at="2017-02-05T16:00:57Z" finished-at="2017-02-05T16:00:57Z">
        </test-method>
      </class>
      <class name="com.netflix.exhibitor.core.state.TestMonitorRunningInstance">
        <test-method status="PASS" signature="testServerListHasChanged()" name="testServerListHasChanged" duration-ms="112" started-at="2017-02-05T16:01:16Z" finished-at="2017-02-05T16:01:16Z">
        </test-method>
        <test-method status="PASS" signature="testTempDownInstance()" name="testTempDownInstance" duration-ms="3035" started-at="2017-02-05T16:01:16Z" finished-at="2017-02-05T16:01:19Z">
        </test-method>
      </class>
      <class name="com.netflix.exhibitor.core.controlpanel.TestFileBasedPreferences">
        <test-method status="PASS" signature="testBasic()" name="testBasic" duration-ms="58" started-at="2017-02-05T16:01:08Z" finished-at="2017-02-05T16:01:08Z">
        </test-method>
      </class>
      <class name="com.netflix.exhibitor.core.servo.TestGetMonitorData">
        <test-method status="PASS" signature="testSimple()" name="testSimple" duration-ms="39" started-at="2017-02-05T16:01:15Z" finished-at="2017-02-05T16:01:16Z">
        </test-method>
      </class>
      <class name="com.netflix.exhibitor.core.backup.s3.TestS3BackupBigFile">
        <test-method status="FAIL" signature="testDownload()" name="testDownload" duration-ms="228" started-at="2017-02-05T16:00:57Z" finished-at="2017-02-05T16:00:57Z">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:454)
	at java.lang.Integer.parseInt(Integer.java:527)
	at com.netflix.exhibitor.core.s3.PropertyBasedS3ClientConfig.<init>(PropertyBasedS3ClientConfig.java:48)
	at com.netflix.exhibitor.core.backup.s3.TestS3BackupProviderBase.testDownload(TestS3BackupProviderBase.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.TestNGForkedStarter.main(TestNGForkedStarter.java:30)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="FAIL" signature="testGetAvailableBackupKeys()" name="testGetAvailableBackupKeys" duration-ms="0" started-at="2017-02-05T16:00:57Z" finished-at="2017-02-05T16:00:57Z">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:454)
	at java.lang.Integer.parseInt(Integer.java:527)
	at com.netflix.exhibitor.core.s3.PropertyBasedS3ClientConfig.<init>(PropertyBasedS3ClientConfig.java:48)
	at com.netflix.exhibitor.core.backup.s3.TestS3BackupProviderBase.testGetAvailableBackupKeys(TestS3BackupProviderBase.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.TestNGForkedStarter.main(TestNGForkedStarter.java:30)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="FAIL" signature="testUpload()" name="testUpload" duration-ms="0" started-at="2017-02-05T16:00:57Z" finished-at="2017-02-05T16:00:57Z">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:454)
	at java.lang.Integer.parseInt(Integer.java:527)
	at com.netflix.exhibitor.core.s3.PropertyBasedS3ClientConfig.<init>(PropertyBasedS3ClientConfig.java:48)
	at com.netflix.exhibitor.core.backup.s3.TestS3BackupProviderBase.getUploadedBytes(TestS3BackupProviderBase.java:135)
	at com.netflix.exhibitor.core.backup.s3.TestS3BackupProviderBase.testUpload(TestS3BackupProviderBase.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.TestNGForkedStarter.main(TestNGForkedStarter.java:30)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="teardown()" name="teardown" is-config="true" duration-ms="3" started-at="2017-02-05T16:00:57Z" finished-at="2017-02-05T16:00:57Z">
        </test-method>
      </class>
      <class name="com.netflix.exhibitor.core.config.TestRollingConfigChange">
        <test-method status="PASS" signature="testAllDownInstances()" name="testAllDownInstances" duration-ms="16" started-at="2017-02-05T16:00:59Z" finished-at="2017-02-05T16:00:59Z">
        </test-method>
        <test-method status="PASS" signature="testChange()" name="testChange" duration-ms="14" started-at="2017-02-05T16:00:59Z" finished-at="2017-02-05T16:00:59Z">
        </test-method>
        <test-method status="PASS" signature="testDownLastInstance()" name="testDownLastInstance" duration-ms="17" started-at="2017-02-05T16:00:59Z" finished-at="2017-02-05T16:00:59Z">
        </test-method>
        <test-method status="PASS" signature="testDownMiddleInstance()" name="testDownMiddleInstance" duration-ms="13" started-at="2017-02-05T16:00:59Z" finished-at="2017-02-05T16:00:59Z">
        </test-method>
        <test-method status="PASS" signature="testFailedQuorum()" name="testFailedQuorum" duration-ms="10" started-at="2017-02-05T16:00:59Z" finished-at="2017-02-05T16:00:59Z">
        </test-method>
        <test-method status="PASS" signature="testLongQuorumSuccess()" name="testLongQuorumSuccess" duration-ms="10" started-at="2017-02-05T16:00:59Z" finished-at="2017-02-05T16:00:59Z">
        </test-method>
      </class>
      <class name="com.netflix.exhibitor.core.backup.s3.TestS3BackupSmallFile">
        <test-method status="FAIL" signature="testDownload()" name="testDownload" duration-ms="14" started-at="2017-02-05T16:00:57Z" finished-at="2017-02-05T16:00:57Z">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:454)
	at java.lang.Integer.parseInt(Integer.java:527)
	at com.netflix.exhibitor.core.s3.PropertyBasedS3ClientConfig.<init>(PropertyBasedS3ClientConfig.java:48)
	at com.netflix.exhibitor.core.backup.s3.TestS3BackupProviderBase.testDownload(TestS3BackupProviderBase.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.TestNGForkedStarter.main(TestNGForkedStarter.java:30)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="FAIL" signature="testGetAvailableBackupKeys()" name="testGetAvailableBackupKeys" duration-ms="0" started-at="2017-02-05T16:00:57Z" finished-at="2017-02-05T16:00:57Z">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:454)
	at java.lang.Integer.parseInt(Integer.java:527)
	at com.netflix.exhibitor.core.s3.PropertyBasedS3ClientConfig.<init>(PropertyBasedS3ClientConfig.java:48)
	at com.netflix.exhibitor.core.backup.s3.TestS3BackupProviderBase.testGetAvailableBackupKeys(TestS3BackupProviderBase.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.TestNGForkedStarter.main(TestNGForkedStarter.java:30)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="FAIL" signature="testUpload()" name="testUpload" duration-ms="0" started-at="2017-02-05T16:00:57Z" finished-at="2017-02-05T16:00:57Z">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:454)
	at java.lang.Integer.parseInt(Integer.java:527)
	at com.netflix.exhibitor.core.s3.PropertyBasedS3ClientConfig.<init>(PropertyBasedS3ClientConfig.java:48)
	at com.netflix.exhibitor.core.backup.s3.TestS3BackupProviderBase.getUploadedBytes(TestS3BackupProviderBase.java:135)
	at com.netflix.exhibitor.core.backup.s3.TestS3BackupProviderBase.testUpload(TestS3BackupProviderBase.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.TestNGForkedStarter.main(TestNGForkedStarter.java:30)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
      </class>
      <class name="com.netflix.exhibitor.core.automanage.TestFixedAutoInstanceManagement">
        <test-method status="PASS" signature="testBecomesObserver()" name="testBecomesObserver" duration-ms="221" started-at="2017-02-05T16:00:50Z" finished-at="2017-02-05T16:00:50Z">
        </test-method>
        <test-method status="PASS" signature="testNoRoom()" name="testNoRoom" duration-ms="7" started-at="2017-02-05T16:00:50Z" finished-at="2017-02-05T16:00:50Z">
        </test-method>
        <test-method status="PASS" signature="testReplacement()" name="testReplacement" duration-ms="10" started-at="2017-02-05T16:00:50Z" finished-at="2017-02-05T16:00:50Z">
        </test-method>
        <test-method status="PASS" signature="testSimpleAddition()" name="testSimpleAddition" duration-ms="13" started-at="2017-02-05T16:00:50Z" finished-at="2017-02-05T16:00:50Z">
        </test-method>
      </class>
      <class name="com.netflix.exhibitor.core.automanage.TestRemoteInstanceRequestClient">
        <test-method status="PASS" signature="testConnectionTimeout()" name="testConnectionTimeout" duration-ms="3681" started-at="2017-02-05T16:00:53Z" finished-at="2017-02-05T16:00:57Z">
        </test-method>
        <test-method status="PASS" signature="testMissingServer()" name="testMissingServer" duration-ms="192" started-at="2017-02-05T16:00:57Z" finished-at="2017-02-05T16:00:57Z">
        </test-method>
      </class>
      <class name="com.netflix.exhibitor.core.config.s3.TestS3PseudoLock">
        <test-method status="PASS" signature="testBlocking()" name="testBlocking" duration-ms="28" started-at="2017-02-05T16:01:00Z" finished-at="2017-02-05T16:01:00Z">
        </test-method>
        <test-method status="PASS" signature="testGCOldLockFiles()" name="testGCOldLockFiles" duration-ms="38" started-at="2017-02-05T16:01:00Z" finished-at="2017-02-05T16:01:00Z">
        </test-method>
        <test-method status="PASS" signature="testMulti()" name="testMulti" duration-ms="14" started-at="2017-02-05T16:01:00Z" finished-at="2017-02-05T16:01:00Z">
        </test-method>
        <test-method status="PASS" signature="testSingle()" name="testSingle" duration-ms="1" started-at="2017-02-05T16:01:00Z" finished-at="2017-02-05T16:01:00Z">
        </test-method>
        <test-method status="PASS" signature="testWithDifferentLockKeySeparator()" name="testWithDifferentLockKeySeparator" duration-ms="1" started-at="2017-02-05T16:01:00Z" finished-at="2017-02-05T16:01:00Z">
        </test-method>
      </class>
      <class name="com.netflix.exhibitor.core.automanage.TestFlexibleAutoInstanceManagement">
        <test-method status="PASS" signature="testAddition()" name="testAddition" duration-ms="12" started-at="2017-02-05T16:00:50Z" finished-at="2017-02-05T16:00:50Z">
        </test-method>
        <test-method status="PASS" signature="testAdditionWithConfigContention()" name="testAdditionWithConfigContention" duration-ms="14" started-at="2017-02-05T16:00:50Z" finished-at="2017-02-05T16:00:50Z">
        </test-method>
        <test-method status="PASS" signature="testAdditionWithRemoval()" name="testAdditionWithRemoval" duration-ms="14" started-at="2017-02-05T16:00:50Z" finished-at="2017-02-05T16:00:50Z">
        </test-method>
        <test-method status="PASS" signature="testBecomesObserver()" name="testBecomesObserver" duration-ms="10" started-at="2017-02-05T16:00:50Z" finished-at="2017-02-05T16:00:50Z">
        </test-method>
        <test-method status="PASS" signature="testInitialAddition()" name="testInitialAddition" duration-ms="12" started-at="2017-02-05T16:00:50Z" finished-at="2017-02-05T16:00:50Z">
        </test-method>
        <test-method status="PASS" signature="testNoChange()" name="testNoChange" duration-ms="7" started-at="2017-02-05T16:00:50Z" finished-at="2017-02-05T16:00:50Z">
        </test-method>
        <test-method status="PASS" signature="testNoServers()" name="testNoServers" duration-ms="10" started-at="2017-02-05T16:00:50Z" finished-at="2017-02-05T16:00:50Z">
        </test-method>
        <test-method status="PASS" signature="testRemoval()" name="testRemoval" duration-ms="142" started-at="2017-02-05T16:00:50Z" finished-at="2017-02-05T16:00:50Z">
        </test-method>
        <test-method status="PASS" signature="testUnstable()" name="testUnstable" duration-ms="3022" started-at="2017-02-05T16:00:50Z" finished-at="2017-02-05T16:00:53Z">
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>
