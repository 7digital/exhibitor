package com.netflix.exhibitor.core.config;

import com.google.common.io.Closeables;
import com.netflix.exhibitor.core.ConfigProvider;
import com.netflix.exhibitor.core.InstanceConfig;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Properties;

public class LocalFileConfigProvider implements ConfigProvider
{
    private final File propertiesFile;
    private final Properties defaults;

    public LocalFileConfigProvider(File propertiesFile)
    {
        this(propertiesFile, new Properties());
    }

    public LocalFileConfigProvider(File propertiesFile, Properties defaults)
    {
        this.propertiesFile = propertiesFile;
        this.defaults = defaults;
    }

    @Override
    public InstanceConfig loadConfig() throws Exception
    {
        Properties      properties = new Properties();
        if ( propertiesFile.exists() )
        {
            InputStream     in = new BufferedInputStream(new FileInputStream(propertiesFile));
            try
            {
                properties.load(in);
            }
            finally
            {
                Closeables.closeQuietly(in);
            }
        }
        return new PropertyBasedInstanceConfig(properties, defaults);
    }

    @Override
    public void storeConfig(InstanceConfig config) throws Exception
    {
        PropertyBasedInstanceConfig     propertyBasedInstanceConfig = new PropertyBasedInstanceConfig(config);

        OutputStream        out = new BufferedOutputStream(new FileOutputStream(propertiesFile));
        try
        {
            propertyBasedInstanceConfig.getProperties().store(out, "Auto-generated by Exhibitor");
        }
        finally
        {
            Closeables.closeQuietly(out);
        }
    }
}
